# How to test application. Access Prometheus http://localhost:9090/ You should see a UI. Go to Status -> Targets to see all targets or applications that are being scraped. We setup http://localhost:9100/ (node-exporter) container to be the website we will scrape. The instructions for the scraping are specified within the prometheus.yaml file. It hits the http://localhost:9100/metric path to get the metrics and log it. Can also directly go to that url as both containers are running when you run "docker compose up --build -d". 

# accessing http://localhost:3000 will show the value of mongo db with database name 'my-db' with collection name 'my-collection' with record (document) of keyId.

services:
  prometheus-node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    ports:
      - 9100:9100
    networks:
      - prometheus-network
    restart: unless-stopped

  prometheus:
    # Pull Official Prometheus 
    image: prom/prometheus
    container_name: prometheus
    volumes:
      # Mounts the current directory's "prometheus.yml" file to the container's 
      # /etc/prometheus/prometheus.yml path as read-only. Any changes made to 
      # the prometheus.yml file on the host will be reflected in the container.
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
      # Matches the Docker volume "prometheus-data" to the container's 
      # /prometheus directory. This volume will persist Prometheus data, 
      # ensuring data retention across container restarts or removals.
      - prometheus-data:/prometheus
    ports:
      - 9090:9090    
    networks:
      - prometheus-network
    restart: always

volumes:
  prometheus-data:

networks:
  prometheus-network:
  # default bridge network driver
    driver: bridge


# ------------------------------------

# IMPORTANT - TO BUILD ALL THE IMAGES AND RUN CONTAINERS - USE FOLLOWING COMMAND IN BASH TERMINAL
#   - docker compose up --build -d

# TO STOP ALL CONTAINERS AND REMOVE ALL IMAGES CREATED FROM THIS DOCKER COMPOSE FILE - RUN COMMAND
#   - docker compose down